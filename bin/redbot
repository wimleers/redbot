#!/usr/bin/env python

"""
CLI interface to REDbot
"""

__author__ = "Jerome Renard <jerome.renard@gmail.com>"
__copyright__ = """\
Copyright (c) 2008-2010 Mark Nottingham

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
"""

import sys
assert sys.version_info[0] == 2 and sys.version_info[1] >= 5, "Please use Python 2.5 or greater"

from optparse import OptionParser

from redbot import droid
from redbot.formatter import find_formatter, available_formatters
import redbot.speak as rs

lang = "en"  # TODO: add as CL option
charset = "utf-8"

def main():
    usage   = """Usage: %prog [options] <url>"""
    version = """Redbot: The Resource Expert Droid, version %s, http://redbot.org/ """ % droid.__version__

    option_parser = OptionParser(usage=usage, version=version)
    option_parser.set_defaults(version=False, descend=False, output_format="txt", show_recommendations=False)

    option_parser.add_option("-a", "--assets",
                             action="store_true", dest="descend",
                             help="check assets, if the URL contains HTML")
    option_parser.add_option("-o", "--output-format",
                             action="store", dest="output_format",
                             help="one of: %s" % ", ".join(available_formatters()))

    (options, args) = option_parser.parse_args()

    if len(args) != 1:
        option_parser.error("Please specify a URL.")

    if options.output_format not in available_formatters():
        option_parser.error("Unrecognised output format.")

    url = args[0]
    red = droid.InspectingResourceExpertDroid(url, descend=options.descend)

    formatter = find_formatter(options.output_format, 'txt', options.descend)(sys.argv[0], url, [], lang, output)
    formatter.start_output()
    formatter.finish_output(red)


def output(out):
    sys.stdout.write(out.encode(charset, 'replace'))


if __name__ == "__main__":
    main()